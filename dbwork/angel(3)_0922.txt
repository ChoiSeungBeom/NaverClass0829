-- 테이블 조회
show tables; -- 전체 테이블 조회 
select * from test01; -- test01 조회
desc test01; -- 테이블 구조 확인

-- insert
insert into test01 (name,age) values ('kim',40);

insert into test01 values(null,'son',26,189.9,now(),'2023-01-01'); -- num에 null을 주면 null이 아닌 auto 숫자 1씩 증가함

-- 테이블 구조 변경(add,drop column,modify, rename column)
alter table test01 add hp varchar(20) default '010-111-1111'; -- hp 컬럼 추가
alter table test01 drop column age; -- age 컬럼 제거
alter table test01 rename column birthday to birth; -- 컬럼명 수정

-- 테이블명 변경이됨 test01을 member로 변경
alter table test01 rename member;
select * from member; -- member 바뀐 테이블 조회


-- sawon 테이블 생성 - 제약조건들도 추가하기
create table sawon (
              num smallint auto_increment,
              name varchar(20),
              score smallint,
              gender varchar(10),
              buseo varchar(10),
              constraint pk_sawon_num primary key(num),
  		constraint ck_sawon_score check (score between 0 and 100),
 		constraint ck_sawon_gender check (gender in ('여자','남자')));
        
        -- sawon테이블 확인
        desc sawon;
        -- sawon의 제약조건들 확인하기
        select * from information_schema.table_constraints where table_name='sawon';
        
        -- 데이터 추가
        insert into sawon values(null,'이하나',89,'여자','홍보부');
        
        select * from sawon;
        -- 제약 조건 오류 확인하기
        -- 에러내용 score의 값이 넘어갔다
        -- Error Code: 3819. Check constraint 'ck_sawon_score' is violated.	0.000 sec
        insert into sawon values(null,'이두나',120,'여자','홍보부'); 
        
        -- Error Code: 3819. Check constraint 'ck_sawon_gender' is violated.	0.000 sec
        -- 에러내용 성별에 잘못된 값입력
        insert into sawon values(null,'이두나',120,'여','홍보부'); 
        
        -- 제대로 된 데이터 각자 7개 정도 추가
        insert into sawon values(null,'최승범',100,'남자','인사부');
        insert into sawon values(null,'김태현',90,'남자','교육부');
        insert into sawon values(null,'김나혜',85,'여자','홍보부');
        insert into sawon values(null,'강호동',80,'남자','홍보부');
        insert into sawon values(null,'이만기',70,'남자','인사부');
        insert into sawon values(null,'한가인',60,'여자','교육부');
        insert into sawon values(null,'이하늬',88,'여자','인사부');
        insert into sawon values(null,'이이경',90,'남자','교육부');
        
        select * from sawon;
        
        -- select limit
        select * from sawon order by name;
        select * from sawon order by name limit 0,3; -- 0(첫글)번부터 3개 조회
        select * from sawon order by name limit 3,3; -- 3(첫글)번부터 3개 조회
        
		-- 문자함수들 연습
        select concat('Hello','Kitty','!!')from dual;
        -- sawon의 name에서 '이' 를 포함한 데이터 조회
        
        select* from sawon where name like concat('%','이','%');
        select replace('Happy Day!!','Happy','Nice') from dual; -- Happy를 Nice로 변경해서 출력
        select instr('Happy Day','Day') from dual; -- 7 : Day의 위치찾기
        select instr('Happy Day','Hello') from dual; -- 없을경우 0
        
		-- 추출
        select left('Have a Nice Day',4) from dual; -- 왼쪽에서 4글자 추출 : Have
        select right('Have a Nice Day',4) from dual; -- 오른쪽에서 4글자 추출 : Nice Day
        select mid('Have a Nice Day',6,6) from dual; -- 왼쪽에서 4글자 추출 : 6번부터 6글자 : a Nice
        select substring('Have a Nice Day',6,6) from dual; -- 왼쪽에서 4글자 추출 6번부터 6글자 : a Nice
        
        -- 공백제거
        select ltrim('			Hello			')from dual; -- 왼쪽 공백제거
        select rtrim('			Hello			')from dual; -- 오른쪽 공백제거
        select trim('			Hello			')from dual; -- 양쪽 공백제거
        
        -- 대소문자 변환
        select lcase('Happy') from dual; -- 소문자
        select lower('Happy') from dual; -- 소문자
        select ucase('Happy') from dual; -- 대문자
        select upper('Happy') from dual; -- 대문자
        
        select reverse('Happy') from dual; -- 문자열 거꾸로
       
		-- 조건함수
        select if(1=2,'happy','nice') from dual;
        select name, score,if(score>=90,'합격','불합격')"평가" from sawon;
        
		-- 오라클의 NVL이 mysql에서는 ifnull
        select name,height from member;
        select name,ifnull(height,0) from member;
        
        -- 수학함수
        select ceiling(5.3), ceiling(5.9) from dual; -- 무조건 올림
        select floor(5.3), floor(5.9) from dual; -- 무조건 내림
        select truncate(2.348,2) from dual; -- 소수점 두자리까지 출력하는데 무조건 내림
        select mod(7,2) from dual; -- 7/2의 나머지
        
        -- Group by
        select buseo 부서,count(*) 인원수,max(score) 최고점수 ,min(score) 최저점수,avg(score) 평균점수 from sawon group by buseo;
        
        create table bitclass (
   idx smallint primary key,
   class varchar(30),
   price int,
   gigan smallint);

create table stu (
   num smallint auto_increment primary key,
   name varchar(20),
   idx smallint,
   sugangday date,
   constraint stu_fk_idx foreign key(idx) references bitclass(idx));

-- bitclass 에 데이타 추가
insert into bitclass values (100,'Java',110000,10);
insert into bitclass values (200,'HTML5',90000,8);
insert into bitclass values (300,'jQuery',130000,12);
insert into bitclass values (400,'Oracle',180000,20);

-- stu 에 데이타 추가
insert into stu (name,idx,sugangday) values ('kim',200,now());
insert into stu (name,idx,sugangday) values ('lee',100,now());
insert into stu (name,idx,sugangday) values ('son',300,now());
insert into stu (name,idx,sugangday) values ('min',400,now());


select * from bitclass;
select * from stu;

-- inner join 1

select class,price,gigan,name,sugangday
from bitclass b,stu s
where b.idx=s.idx;
        
        
select *
from bitclass b,stu s
where b.idx=s.idx;
        
-- inner join 2

select name,class, gigan,price,sugangday
from bitclass b
inner join stu on b.idx=stu.idx; 

select *
from bitclass b
inner join stu on b.idx=stu.idx; 
        
-- sub table 에 데이터가 추가된 상태에서 부모테이블의 데이터를 삭제해보자
delete from bitclass where idx=100;        
        
        
-- sub table부터 지우자
delete from stu where idx=100;        
delete from bitclass where idx=100;        

-- 연습용 조인 테이블 모두 제거하기
drop table stu;
drop table bitclass;
drop table member;
-------------------------------------------------------------------- 
select buseo,count(*) count,max(score) maxscore,min(score) minscore,avg(score) avgscore
from sawon group by buseo;


CREATE TABLE BIT701.TEST(
NUM SMALLINT,
NAME VARCHAR(20),
AGE SMALLINT DEFAULT 10,
BIRTHDAY DATE,
CONSTRAINT TEST_PK_NUMNAME PRIMARY KEY(NUM,NAME)
);


INSERT INTO BIT701.TEST VALUES (1,'LEE',10,NOW());
INSERT INTO BIT701.TEST VALUES (1,'LEE',10,NOW());
INSERT INTO BIT701.TEST VALUES (2,'LEE',10,NOW());
INSERT INTO BIT701.TEST VALUES (1,'KIM',10,NOW());
SELECT * FROM BIT701.TEST;
DROP TABLE bit701.TEST;

select * from sawon;


-- num,name,score,buseo 를 입력받은 후 num에 해당하는 name,score,buseo 수정하기

UPDATE SAWON SET NAME ='최승범', score = 75, buseo = '교육부' WHERE NUM=3;

select * from sawon where name like '강%';

CREATE TABLE STUDENT(
	NUM SMALLINT AUTO_INCREMENT,
    NAME VARCHAR(20),
    BLOOD CHAR(2),
    PHONE VARCHAR(20),
    WRITEDAY DATETIME,
    CONSTRAINT STU_PK_NUM PRIMARY KEY(NUM),
    CONSTRAINT STU_CK_BLOOD CHECK (BLOOD IN('A','B','O','AB'))
);

INSERT INTO STUDENT VALUES(NULL,'최승범','B','010-2702-4800',NOW());

INSERT INTO STUDETN VALUES(NULL,'장미란','A','010-2323-4242',now());

select * from student;


create table test(
student_id int(20) not null primary key ,
phone varchar(20) not null
);

select * from test;

insert into test(phone) values('010-2702-4800');